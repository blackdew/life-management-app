"""Initial schema creation

Revision ID: 8aaa01a42a55
Revises: 
Create Date: 2025-10-11 12:02:55.601638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8aaa01a42a55'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False, comment='기록 날짜'),
    sa.Column('reflection', sa.Text(), nullable=True, comment='하루 성찰 내용'),
    sa.Column('gratitude', sa.Text(), nullable=True, comment='감사한 일들'),
    sa.Column('energy_level', sa.Enum('VERY_LOW', 'LOW', 'NORMAL', 'HIGH', 'VERY_HIGH', name='energylevel'), nullable=True, comment='에너지 레벨'),
    sa.Column('meta_cognitive_notes', sa.Text(), nullable=True, comment='메타인지 노트 (자기 관찰, 도파민 패턴 등)'),
    sa.Column('mood_note', sa.String(length=500), nullable=True, comment='기분 메모'),
    sa.Column('key_learnings', sa.Text(), nullable=True, comment='주요 배운 점들'),
    sa.Column('tomorrow_focus', sa.Text(), nullable=True, comment='내일 집중할 것들'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='생성일시'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_index(op.f('ix_daily_records_id'), 'daily_records', ['id'], unique=False)
    op.create_table('daily_reflections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reflection_date', sa.Date(), nullable=False, comment='회고 날짜'),
    sa.Column('reflection_text', sa.Text(), nullable=False, comment='회고 내용'),
    sa.Column('total_todos', sa.Integer(), nullable=True, comment='총 할 일 개수'),
    sa.Column('completed_todos', sa.Integer(), nullable=True, comment='완료한 할 일 개수'),
    sa.Column('completion_rate', sa.Float(), nullable=True, comment='완료율 (%)'),
    sa.Column('todos_snapshot', sa.JSON(), nullable=True, comment='회고 시점의 할일 목록 스냅샷'),
    sa.Column('satisfaction_score', sa.Integer(), nullable=True, comment='만족도 점수 (1-5)'),
    sa.Column('energy_level', sa.Integer(), nullable=True, comment='에너지 레벨 (1-5)'),
    sa.Column('generated_blog_content', sa.Text(), nullable=True, comment='LLM이 생성한 블로그 글 내용'),
    sa.Column('blog_generation_prompt', sa.Text(), nullable=True, comment='블로그 글 생성에 사용된 프롬프트'),
    sa.Column('blog_generated_at', sa.DateTime(timezone=True), nullable=True, comment='블로그 글 생성 시간'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='생성 시간'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정 시간'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reflection_date')
    )
    op.create_index(op.f('ix_daily_reflections_id'), 'daily_reflections', ['id'], unique=False)
    op.create_table('milestones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False, comment='마일스톤 제목'),
    sa.Column('description', sa.Text(), nullable=True, comment='마일스톤 상세 설명'),
    sa.Column('start_date', sa.Date(), nullable=False, comment='시작 예정일'),
    sa.Column('end_date', sa.Date(), nullable=False, comment='종료 예정일'),
    sa.Column('status', sa.Enum('PLANNING', 'ACTIVE', 'COMPLETED', 'PAUSED', name='milestonestatus'), nullable=True, comment='진행 상태'),
    sa.Column('progress', sa.Float(), nullable=True, comment='진행률 (0-100) - DEPRECATED: 실시간 계산 대신 calculate_actual_progress() 사용'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='수정일시'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_milestones_id'), 'milestones', ['id'], unique=False)
    op.create_table('daily_todos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False, comment='할 일 제목'),
    sa.Column('description', sa.Text(), nullable=True, comment='상세 내용'),
    sa.Column('notes', sa.Text(), nullable=True, comment='간단한 메모'),
    sa.Column('category', sa.Enum('WORK', 'LEARNING', 'HEALTH', 'PERSONAL', 'RELATIONSHIP', 'OTHER', name='todocategory'), nullable=True, comment='카테고리 (선택적)'),
    sa.Column('is_completed', sa.Boolean(), nullable=True, comment='완료 여부'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='완료 시각'),
    sa.Column('completion_reflection', sa.Text(), nullable=True, comment='완료 후 회고'),
    sa.Column('completion_image_path', sa.String(length=500), nullable=True, comment='완료 회고 이미지 경로'),
    sa.Column('created_date', sa.Date(), nullable=True, comment='생성 날짜'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='생성 시각'),
    sa.Column('scheduled_date', sa.Date(), nullable=True, comment='예정 일자 (미루기용)'),
    sa.Column('estimated_minutes', sa.Integer(), nullable=True, comment='예상 소요시간 (분)'),
    sa.Column('actual_minutes', sa.Integer(), nullable=True, comment='실제 소요시간 (분)'),
    sa.Column('postpone_count', sa.Integer(), nullable=True, comment='미루기 횟수'),
    sa.Column('postpone_history', sa.Text(), nullable=True, comment='미루기 히스토리 (JSON)'),
    sa.Column('milestone_id', sa.Integer(), nullable=True, comment='연관 마일스톤 ID'),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_todos_id'), 'daily_todos', ['id'], unique=False)
    op.create_table('todos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False, comment='할 일 제목'),
    sa.Column('description', sa.Text(), nullable=True, comment='상세 설명'),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='todostatus'), nullable=True, comment='할일 상태'),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='todopriority'), nullable=True, comment='우선순위'),
    sa.Column('category', sa.Enum('WORK', 'LEARNING', 'HEALTH', 'PERSONAL', 'RELATIONSHIP', 'OTHER', name='todocategory'), nullable=True, comment='카테고리'),
    sa.Column('is_completed', sa.Boolean(), nullable=True, comment='완료 여부'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='완료 시각'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='생성 시각'),
    sa.Column('estimated_time', sa.Integer(), nullable=True, comment='예상 소요시간 (분)'),
    sa.Column('actual_time', sa.Integer(), nullable=True, comment='실제 소요시간 (분)'),
    sa.Column('milestone_id', sa.Integer(), nullable=True, comment='마일스톤 ID'),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todos_id'), 'todos', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_todos_id'), table_name='todos')
    op.drop_table('todos')
    op.drop_index(op.f('ix_daily_todos_id'), table_name='daily_todos')
    op.drop_table('daily_todos')
    op.drop_index(op.f('ix_milestones_id'), table_name='milestones')
    op.drop_table('milestones')
    op.drop_index(op.f('ix_daily_reflections_id'), table_name='daily_reflections')
    op.drop_table('daily_reflections')
    op.drop_index(op.f('ix_daily_records_id'), table_name='daily_records')
    op.drop_table('daily_records')
    # ### end Alembic commands ###
